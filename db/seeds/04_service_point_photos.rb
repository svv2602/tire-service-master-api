# db/seeds/04_service_point_photos.rb
# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ç–æ—á–µ–∫

puts '=== –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ç–æ—á–µ–∫ ==='

# –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Ç–æ—á–∫–∏
service_points = ServicePoint.all

if service_points.empty?
  puts "‚ùå –ù–µ—Ç —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ç–æ—á–µ–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"
  puts "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ seed —Ñ–∞–π–ª service_points_improved.rb"
  exit
end

# –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –ø–∞–ø–∫–∏ public/image
local_image_files = [
  Rails.root.join('public', 'image', '1.jpeg').to_s,
  Rails.root.join('public', 'image', '2.jpeg').to_s,
  Rails.root.join('public', 'image', '3.jpeg').to_s,
  Rails.root.join('public', 'image', '4.jpeg').to_s,
  Rails.root.join('public', 'image', 'img_calc.png').to_s
]

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤
available_files = local_image_files.select { |file| File.exist?(file) }

if available_files.empty?
  puts "‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
  puts "   –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"
  puts "   –§–∞–π–ª—ã –∏—Å–∫–∞–ª–∏—Å—å –≤: #{local_image_files.join(', ')}"
  exit
end

puts "üìÅ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: #{available_files.count}"
puts "üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã: #{available_files.map { |f| File.basename(f) }.join(', ')}"

# –¢–∏–ø—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
photo_types = ['exterior', 'interior', 'equipment', 'workspace']

created_count = 0
updated_count = 0

service_points.each do |service_point|
  puts "  üì∏ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è: #{service_point.name}"
  
  # –î–æ–±–∞–≤–ª—è–µ–º 2-3 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏
  photos_count = [2, 3].sample
  
  photos_count.times do |index|
    image_file = available_files.sample
    photo_type = photo_types.sample
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è
    existing_photo = ServicePointPhoto.find_by(
      service_point: service_point,
      description: "#{photo_type.capitalize} —Ñ–æ—Ç–æ #{service_point.name}"
    )
    
    if existing_photo
      # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é (–±–µ–∑ —Ñ–∞–π–ª–∞, —Ç–æ–ª—å–∫–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ)
      existing_photo.update!(
        description: "#{photo_type.capitalize} —Ñ–æ—Ç–æ #{service_point.name}",
        sort_order: index + 1,
        is_main: index == 0
      )
      updated_count += 1
      puts "    ‚úèÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ: #{photo_type}"
    else
      # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å —Å –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞
      begin
        photo = ServicePointPhoto.new(
          service_point: service_point,
          description: "#{photo_type.capitalize} —Ñ–æ—Ç–æ #{service_point.name}",
          sort_order: index + 1,
          is_main: index == 0
        )
        
        # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        photo.file.attach(
          io: File.open(image_file),
          filename: File.basename(image_file),
          content_type: case File.extname(image_file).downcase
                       when '.jpg', '.jpeg' then 'image/jpeg'
                       when '.png' then 'image/png'
                       else 'image/jpeg'
                       end
        )
        
        photo.save!
        created_count += 1
        puts "    ‚ú® –°–æ–∑–¥–∞–Ω–æ —Ñ–æ—Ç–æ: #{photo_type} (#{File.basename(image_file)})"
      rescue => e
        puts "    ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ #{photo_type}: #{e.message}"
      end
    end
  end
end

puts ""
puts "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:"
puts "  –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: #{created_count}"
puts "  –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: #{updated_count}"
puts "  –í—Å–µ–≥–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ: #{ServicePointPhoto.count}"

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–µ—Ä–≤–∏—Å–Ω—ã–º —Ç–æ—á–∫–∞–º
puts ""
puts "üìà –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ —Å–µ—Ä–≤–∏—Å–Ω—ã–º —Ç–æ—á–∫–∞–º:"
ServicePoint.includes(:photos).each do |sp|
  photos_count = sp.photos.count
  primary_photo = sp.photos.find_by(is_main: true)
  puts "  #{sp.name}: #{photos_count} —Ñ–æ—Ç–æ#{primary_photo ? ' (–µ—Å—Ç—å –≥–ª–∞–≤–Ω–æ–µ)' : ' (–Ω–µ—Ç –≥–ª–∞–≤–Ω–æ–≥–æ)'}"
end

puts ""
puts "‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ç–æ—á–µ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã!" 