---
openapi: 3.0.1
info:
  title: Tire Service API
  version: v1
  description: API для сервиса шиномонтажа. Предоставляет функциональность для управления
    клиентами, партнерами, сервисными точками, бронированиями и другими аспектами
    бизнеса.
  contact:
    name: API Support
    email: support@tire-service.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  "/api/v1/health":
    get:
      summary: Health check endpoint
      tags:
      - System
      description: Проверка состояния API
      responses:
        '200':
          description: API работает
  "/api/v1/auth/login":
    post:
      summary: Authenticates user and returns JWT token
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: authentication successful
        '401':
          description: Invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                auth:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password
                  required:
                  - email
                  - password
              required:
              - auth
  "/api/v1/clients/register":
    post:
      summary: Регистрирует нового клиента
      tags:
      - Clients
      parameters: []
      responses:
        '201':
          description: Клиент создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
                  message:
                    type: string
                    example: Account created successfully
        '422':
          description: Некорректные параметры
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    middle_name:
                      type: string
                    phone:
                      type: string
                    preferred_notification_method:
                      type: string
                      enum:
                      - email
                      - phone
                      - push
                    marketing_consent:
                      type: boolean
                  required:
                  - email
                  - password
                  - password_confirmation
                  - first_name
                  - last_name
  "/api/v1/clients/{client_id}/bookings":
    get:
      summary: Получает все бронирования для текущего пользователя
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: client_id
        in: path
        required: true
        schema:
          type: integer
      - name: page
        in: query
        required: false
        description: Номер страницы
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: Элементов на странице
        schema:
          type: integer
      - name: date
        in: query
        required: false
        description: Фильтр по дате (формат YYYY-MM-DD)
        schema:
          type: string
      - name: from_date
        in: query
        required: false
        description: Начальная дата для фильтра по периоду
        schema:
          type: string
      - name: to_date
        in: query
        required: false
        description: Конечная дата для фильтра по периоду
        schema:
          type: string
      - name: status_id
        in: query
        required: false
        description: Фильтр по ID статуса бронирования
        schema:
          type: integer
      - name: filter
        in: query
        required: false
        description: Предопределенный фильтр (upcoming, past, today)
        schema:
          type: string
      responses:
        '200':
          description: bookings found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    booking_date:
                      type: string
                      format: date
                    start_time:
                      type: string
                    end_time:
                      type: string
                    status:
                      type: object
                      properties:
                        id:
                          oneOf:
                          - type: integer
                          - type: 'null'
                        name:
                          type: string
                    total_price:
                      oneOf:
                      - type: number
                      - type: string
                        pattern: "^\\d+(\\.\\d+)?$"
                      - type: 'null'
                    car_type:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
    post:
      summary: Creates a new booking
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: client_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: booking created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  client_id:
                    type: integer
                  service_point_id:
                    type: integer
                  booking_date:
                    type: string
                    format: date
                  start_time:
                    type: string
                  end_time:
                    type: string
                  status:
                    type: object
                    properties:
                      id:
                        oneOf:
                        - type: integer
                        - type: 'null'
                      name:
                        type: string
                  total_price:
                    oneOf:
                    - type: number
                    - type: string
                      pattern: "^\\d+(\\.\\d+)?$"
                    - type: 'null'
                  car_type:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                booking:
                  type: object
                  properties:
                    service_point_id:
                      type: integer
                    booking_date:
                      type: string
                      format: date
                    start_time:
                      type: string
                      format: time
                    end_time:
                      type: string
                      format: time
                    car_type_id:
                      type: integer
                    slot_id:
                      type: integer
                    services:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          quantity:
                            type: integer
                  required:
                  - service_point_id
                  - booking_date
                  - services
                  - car_type_id
                  - slot_id
  "/api/v1/clients/{client_id}/bookings/{id}":
    get:
      summary: Retrieves a booking
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: client_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: booking found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  booking_date:
                    type: string
                    format: date
                  start_time:
                    type: string
                  end_time:
                    type: string
                  client_id:
                    type: integer
                  service_point_id:
                    type: integer
                  total_price:
                    oneOf:
                    - type: number
                    - type: string
                      pattern: "^\\d+(\\.\\d+)?$"
                    - type: 'null'
                  status:
                    type: object
                    properties:
                      id:
                        oneOf:
                        - type: integer
                        - type: 'null'
                      name:
                        type: string
                  car_type:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
        '404':
          description: booking not found
    put:
      summary: Updates a booking
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: client_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '422':
          description: booking validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      booking_date:
                        type: array
                        items:
                          type: string
        '404':
          description: booking not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                booking:
                  type: object
                  properties:
                    booking_date:
                      type: string
                      format: date
                    start_time:
                      type: string
                      format: time
                    end_time:
                      type: string
                      format: time
                    car_id:
                      type: integer
                    car_type_id:
                      type: integer
                    notes:
                      type: string
    delete:
      summary: Cancels a booking
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: client_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: booking canceled
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: object
                    properties:
                      id:
                        oneOf:
                        - type: integer
                        - type: 'null'
                      name:
                        type: string
                        example: canceled_by_client
        '404':
          description: booking not found
  "/api/v1/bookings/{id}/confirm":
    post:
      summary: Confirms a booking
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: booking confirmed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                        example: confirmed
        '401':
          description: unauthorized
  "/api/v1/bookings/{id}/cancel":
    post:
      summary: Cancels a booking
      tags:
      - Bookings
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: booking canceled
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: object
                    properties:
                      id:
                        oneOf:
                        - type: integer
                        - type: 'null'
                      name:
                        type: string
                        example: canceled_by_client
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                booking:
                  type: object
                  properties:
                    cancellation_reason_id:
                      type: integer
                    cancellation_comment:
                      type: string
  "/api/v1/clients":
    get:
      summary: Получает список всех клиентов
      tags:
      - Clients
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: query
        in: query
        required: false
        description: Поиск по email, имени или фамилии
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Номер страницы для пагинации
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: Количество элементов на странице
        schema:
          type: integer
      responses:
        '200':
          description: Найдены клиенты
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        user:
                          type: object
                          properties:
                            id:
                              type: integer
                            email:
                              type: string
                            phone:
                              type: string
                            first_name:
                              type: string
                            last_name:
                              type: string
                            middle_name:
                              type: string
                        preferred_notification_method:
                          type: string
                        marketing_consent:
                          type: boolean
                        created_at:
                          type: string
                          format: date_time
                        updated_at:
                          type: string
                          format: date_time
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      per_page:
                        type: integer
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  "/api/v1/clients/{id}":
    get:
      summary: Получает информацию о конкретном клиенте
      tags:
      - Clients
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ID клиента
        schema:
          type: integer
      responses:
        '200':
          description: Клиент найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      phone:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      middle_name:
                        type: string
                  preferred_notification_method:
                    type: string
                  marketing_consent:
                    type: boolean
                  cars:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        brand:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        model:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        year:
                          type: integer
                        license_plate:
                          type: string
                  created_at:
                    type: string
                    format: date_time
                  updated_at:
                    type: string
                    format: date_time
        '404':
          description: Клиент не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Couldn't find Client with 'id'=999
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
    put:
      summary: Обновляет информацию о клиенте
      tags:
      - Clients
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ID клиента
        schema:
          type: integer
      responses:
        '200':
          description: Клиент обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      phone:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      middle_name:
                        type: string
                  preferred_notification_method:
                    type: string
                  marketing_consent:
                    type: boolean
                  created_at:
                    type: string
                    format: date_time
                  updated_at:
                    type: string
                    format: date_time
        '422':
          description: Некорректные параметры
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You are not authorized to perform this action
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    phone:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    middle_name:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                client:
                  type: object
                  properties:
                    preferred_notification_method:
                      type: string
                      enum:
                      - email
                      - phone
                      - push
                    marketing_consent:
                      type: boolean
    delete:
      summary: Деактивирует клиента
      tags:
      - Clients
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ID клиента
        schema:
          type: integer
      responses:
        '200':
          description: Клиент деактивирован
        '403':
          description: Доступ запрещен
  "/api/v1/clients/social_auth":
    post:
      summary: Аутентификация через социальную сеть
      tags:
      - Clients
      parameters: []
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_token:
                    type: string
                  message:
                    type: string
                    example: Login successful
        '422':
          description: Ошибка аутентификации
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid token or provider
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  enum:
                  - google
                  - facebook
                  - apple
                  example: google
                token:
                  type: string
                  example: oauth2-token-from-provider
              required:
              - provider
              - token
  "/api/v1/service_points/{service_point_id}/photos":
    get:
      summary: Получает все фотографии сервисной точки
      tags:
      - Service Point Photos
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: service_point_id
        in: path
        required: true
        description: ID сервисной точки
        schema:
          type: integer
      responses:
        '200':
          description: Найдены фотографии
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    url:
                      type: string
                    description:
                      type: string
                    sort_order:
                      type: integer
                    created_at:
                      type: string
                      format: date_time
        '404':
          description: Сервисная точка не найдена
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Couldn't find ServicePoint with 'id'=999
    post:
      summary: Загружает новую фотографию для сервисной точки
      tags:
      - Service Point Photos
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: service_point_id
        in: path
        required: true
        description: ID сервисной точки
        schema:
          type: integer
      responses:
        '201':
          description: Фотография загружена
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  url:
                    type: string
                  description:
                    type: string
                  sort_order:
                    type: integer
                  created_at:
                    type: string
                    format: date_time
        '403':
          description: Отказано в доступе
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Доступ запрещен
        '422':
          description: Неверные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: file
        required: true
        description: Файл изображения
  "/api/v1/service_points/{service_point_id}/photos/{id}":
    get:
      summary: Получает конкретную фотографию сервисной точки
      tags:
      - Service Point Photos
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: service_point_id
        in: path
        required: true
        description: ID сервисной точки
        schema:
          type: integer
      - name: id
        in: path
        required: true
        description: ID фотографии
        schema:
          type: integer
      responses:
        '200':
          description: Фотография найдена
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  url:
                    type: string
                  description:
                    type: string
                  sort_order:
                    type: integer
                  created_at:
                    type: string
                    format: date_time
        '404':
          description: Фотография не найдена
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Couldn't find ServicePointPhoto with 'id'=999
    patch:
      summary: Обновляет данные фотографии
      tags:
      - Service Point Photos
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: service_point_id
        in: path
        required: true
        description: ID сервисной точки
        schema:
          type: integer
      - name: id
        in: path
        required: true
        description: ID фотографии
        schema:
          type: integer
      responses:
        '200':
          description: Фотография обновлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  url:
                    type: string
                  description:
                    type: string
                  sort_order:
                    type: integer
        '403':
          description: Отказано в доступе
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Доступ запрещен
        '422':
          description: Неверные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                sort_order:
                  type: integer
    delete:
      summary: Удаляет фотографию
      tags:
      - Service Point Photos
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: service_point_id
        in: path
        required: true
        description: ID сервисной точки
        schema:
          type: integer
      - name: id
        in: path
        required: true
        description: ID фотографии
        schema:
          type: integer
      responses:
        '200':
          description: Фотография удалена
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Photo was successfully deleted
        '403':
          description: Отказано в доступе
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Доступ запрещен
        '404':
          description: Фотография не найдена
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Couldn't find ServicePointPhoto
  "/api/v1/service_points":
    get:
      summary: Получает список всех сервисных точек
      tags:
      - Service Points
      parameters:
      - name: city_id
        in: query
        required: false
        description: Фильтрация по ID города
        schema:
          type: integer
      - name: amenity_ids
        in: query
        required: false
        description: 'Фильтрация по удобствам, ID через запятую (например: 1,2,3)'
        schema:
          type: string
      - name: query
        in: query
        required: false
        description: Поиск по названию или адресу
        schema:
          type: string
      - name: sort_by
        in: query
        required: false
        description: 'Поле для сортировки (например: rating, name, created_at)'
        schema:
          type: string
      - name: sort_direction
        in: query
        required: false
        description: Направление сортировки (asc или desc)
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: Номер страницы для пагинации
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: Количество элементов на странице
        schema:
          type: integer
      responses:
        '200':
          description: Найдены сервисные точки
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        address:
                          type: string
                        latitude:
                          type: string
                        longitude:
                          type: string
                        contact_phone:
                          type: string
                        city:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        average_rating:
                          type: string
                        total_clients_served:
                          type: integer
                        cancellation_rate:
                          type: string
                        post_count:
                          type: integer
                        status:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            color:
                              type:
                              - string
                              - 'null'
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      per_page:
                        type: integer
  "/api/v1/partners/{partner_id}/service_points":
    get:
      summary: Получает список сервисных точек конкретного партнера
      tags:
      - Service Points
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: partner_id
        in: path
        required: true
        description: ID партнера
        schema:
          type: integer
      - name: page
        in: query
        required: false
        description: Номер страницы для пагинации
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: Количество элементов на странице
        schema:
          type: integer
      responses:
        '200':
          description: Найдены сервисные точки
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        address:
                          type: string
                        status:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            color:
                              type:
                              - string
                              - 'null'
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      per_page:
                        type: integer
    post:
      summary: Создает новую сервисную точку
      tags:
      - Service Points
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: partner_id
        in: path
        required: true
        description: ID партнера
        schema:
          type: integer
      responses:
        '201':
          description: Сервисная точка создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  address:
                    type: string
        '422':
          description: Невалидные параметры
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
        '403':
          description: Отказано в доступе
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Доступ запрещен
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service_point:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    address:
                      type: string
                    city_id:
                      type: integer
                    latitude:
                      type: number
                      format: float
                    longitude:
                      type: number
                      format: float
                    contact_phone:
                      type: string
                    post_count:
                      type: integer
                    default_slot_duration:
                      type: integer
                    status_id:
                      type: integer
                  required:
                  - name
                  - address
                  - city_id
                  - post_count
                  - default_slot_duration
  "/api/v1/service_points/{id}":
    get:
      summary: Получает информацию о сервисной точке
      tags:
      - Service Points
      parameters:
      - name: id
        in: path
        required: true
        description: ID сервисной точки
        schema:
          type: integer
      responses:
        '200':
          description: Сервисная точка найдена
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  address:
                    type: string
                  latitude:
                    type: string
                  longitude:
                    type: string
                  contact_phone:
                    type: string
                  average_rating:
                    type: string
                  total_clients_served:
                    type: integer
                  cancellation_rate:
                    type: string
                  post_count:
                    type: integer
                  default_slot_duration:
                    type: integer
                  partner:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  city:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  status:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      color:
                        type:
                        - string
                        - 'null'
                  amenities:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        icon:
                          type: string
                  photos:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        url:
                          type: string
                        sort_order:
                          type: integer
        '404':
          description: Сервисная точка не найдена
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Couldn't find ServicePoint with 'id'=999
  "/api/v1/partners/{partner_id}/service_points/{id}":
    patch:
      summary: Обновляет информацию о сервисной точке
      tags:
      - Service Points
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: partner_id
        in: path
        required: true
        description: ID партнера
        schema:
          type: integer
      - name: id
        in: path
        required: true
        description: ID сервисной точки
        schema:
          type: integer
      responses:
        '200':
          description: Сервисная точка обновлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '422':
          description: Невалидные параметры
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
        '403':
          description: Отказано в доступе
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Доступ запрещен
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service_point:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    address:
                      type: string
                    city_id:
                      type: integer
                    latitude:
                      type: number
                      format: float
                    longitude:
                      type: number
                      format: float
                    contact_phone:
                      type: string
                    post_count:
                      type: integer
                    default_slot_duration:
                      type: integer
                    status_id:
                      type: integer
    delete:
      summary: Закрывает (деактивирует) сервисную точку
      tags:
      - Service Points
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: partner_id
        in: path
        required: true
        description: ID партнера
        schema:
          type: integer
      - name: id
        in: path
        required: true
        description: ID сервисной точки
        schema:
          type: integer
      responses:
        '200':
          description: Сервисная точка закрыта успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Service point closed successfully
        '403':
          description: Отказано в доступе
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Доступ запрещен
  "/api/v1/service_points/nearby":
    get:
      summary: Получает список ближайших сервисных точек
      tags:
      - Service Points
      parameters:
      - name: latitude
        in: query
        required: true
        description: Широта точки поиска
        schema:
          type: number
      - name: longitude
        in: query
        required: true
        description: Долгота точки поиска
        schema:
          type: number
      - name: distance
        in: query
        required: false
        description: Радиус поиска в километрах (по умолчанию 10km)
        schema:
          type: number
      - name: page
        in: query
        required: false
        description: Номер страницы для пагинации
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: Количество элементов на странице
        schema:
          type: integer
      responses:
        '200':
          description: Найдены ближайшие сервисные точки
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        address:
                          type: string
                        latitude:
                          type: string
                        longitude:
                          type: string
                        distance:
                          type: number
                          format: float
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      per_page:
                        type: integer
  "/api/v1/service_points/{id}/basic":
    get:
      summary: Получение базовой информации о сервисной точке
      tags:
      - Service Points
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Базовая информация о сервисной точке
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  address:
                    type: string
                  contact_phone:
                    type: string
                  status_id:
                    type: integer
                  city:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      region:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                  partner:
                    type: object
                    properties:
                      id:
                        type: integer
                      company_name:
                        type: string
        '404':
          description: Сервисная точка не найдена
  "/api/v1/car_brands/{car_brand_id}/car_models":
    get:
      summary: Получает список моделей для указанного бренда
      tags:
      - Car Models
      parameters:
      - name: car_brand_id
        in: path
        required: true
        schema:
          type: integer
      - name: query
        in: query
        required: false
        schema:
          type: string
        description: Поиск по названию модели
      - name: active
        in: query
        required: false
        schema:
          type: boolean
        description: Фильтр по статусу активности
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
        description: Номер страницы для пагинации
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
          default: 10
          maximum: 100
        description: Количество элементов на странице
      responses:
        '200':
          description: Список моделей
          content:
            application/json:
              schema:
                type: object
                properties:
                  car_models:
                    type: array
                    items:
                      $ref: '#/components/schemas/CarModel'
                  total_items:
                    type: integer
                    description: Общее количество моделей с учетом фильтров
                required:
                  - car_models
                  - total_items
    post:
      summary: Создает новую модель для указанного бренда
      tags:
      - Car Models
      security:
        - BearerAuth: []
      parameters:
      - name: car_brand_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                car_model:
                  type: object
                  properties:
                    name:
                      type: string
                    is_active:
                      type: boolean
                  required:
                    - name
      responses:
        '201':
          description: Модель создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarModel'
        '401':
          description: Не авторизован
        '422':
          description: Ошибка валидации

  "/api/v1/car_brands/{car_brand_id}/car_models/{id}":
    put:
      summary: Обновляет модель
      tags:
      - Car Models
      security:
        - BearerAuth: []
      parameters:
      - name: car_brand_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                car_model:
                  type: object
                  properties:
                    name:
                      type: string
                    is_active:
                      type: boolean
      responses:
        '200':
          description: Модель обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarModel'
        '401':
          description: Не авторизован
        '422':
          description: Ошибка валидации
    delete:
      summary: Удаляет модель
      tags:
      - Car Models
      security:
        - BearerAuth: []
      parameters:
      - name: car_brand_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Модель удалена
        '401':
          description: Не авторизован
        '422':
          description: Невозможно удалить модель

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT токен для аутентификации. Получается через эндпоинт /api/v1/auth/login
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Сообщение об ошибке
        details:
          type: object
          description: Дополнительные детали ошибки
      required:
      - error
    ValidationError:
      type: object
      properties:
        errors:
          type: object
          description: Ошибки валидации по полям
      required:
      - errors
    CarBrand:
      type: object
      properties:
        id:
          type: integer
          description: Уникальный идентификатор бренда
        name:
          type: string
          description: Название бренда
        is_active:
          type: boolean
          description: Активен ли бренд
        models_count:
          type: integer
          description: Количество моделей в бренде
        logo:
          type: string
          nullable: true
          description: URL логотипа бренда
        created_at:
          type: string
          format: date-time
          description: Дата создания бренда
        updated_at:
          type: string
          format: date-time
          description: Дата обновления бренда
      required:
      - id
      - name
      - is_active
      - models_count
      - created_at
      - updated_at
    CarModel:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        brand_id:
          type: integer
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        brand:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
tags:
- name: Authentication
  description: Аутентификация и авторизация пользователей
- name: Clients
  description: Управление клиентами
- name: Partners
  description: Управление партнерами
- name: Service Points
  description: Управление сервисными точками
- name: Bookings
  description: Управление бронированиями
- name: Photos
  description: Управление фотографиями сервисных точек
- name: Catalogs
  description: Справочники и каталоги
- name: System
  description: Системные эндпоинты
