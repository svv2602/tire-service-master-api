# config/initializers/database_sequences.rb
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π PostgreSQL –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ

Rails.application.configure do
  # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –≤ development –∏ production –æ–∫—Ä—É–∂–µ–Ω–∏—è—Ö
  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤ test –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
  if Rails.env.development? || Rails.env.production?
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    config.after_initialize do
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞
      begin
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        ActiveRecord::Base.connection.execute("SELECT 1")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
        Rails.logger.info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π PostgreSQL –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ..."
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        tables = %w[
          regions cities users clients partners bookings service_points reviews
          car_types car_brands car_models service_categories amenities
          user_roles booking_statuses payment_statuses page_contents
        ]
        
        problems_found = 0
        fixed_count = 0
        
        tables.each do |table|
          begin
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
            next unless ActiveRecord::Base.connection.table_exists?(table)
            next unless ActiveRecord::Base.connection.column_exists?(table, :id)
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            max_id = ActiveRecord::Base.connection.execute(
              "SELECT MAX(id) FROM #{table}"
            ).first['max'] || 0
            
            sequence_name = "#{table}_id_seq"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            sequence_exists = ActiveRecord::Base.connection.execute(
              "SELECT 1 FROM pg_sequences WHERE sequencename = '#{sequence_name}'"
            ).ntuples > 0
            
            next unless sequence_exists
            
            current_val = ActiveRecord::Base.connection.execute(
              "SELECT last_value FROM #{sequence_name}"
            ).first['last_value']
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if current_val <= max_id
              next_val = max_id + 1
              ActiveRecord::Base.connection.execute(
                "SELECT setval('#{sequence_name}', #{next_val})"
              )
              
              Rails.logger.info "  ‚úÖ #{table}: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å #{current_val} ‚Üí #{next_val}"
              problems_found += 1
              fixed_count += 1
            end
            
          rescue => e
            Rails.logger.warn "  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ #{table}: #{e.message}"
          end
        end
        
        if problems_found > 0
          Rails.logger.info "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π: #{fixed_count}"
        else
          Rails.logger.info "‚úÖ –í—Å–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ PostgreSQL –≤ –ø–æ—Ä—è–¥–∫–µ"
        end
        
      rescue => e
        # –ï—Å–ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
        Rails.logger.warn "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: #{e.message}"
      end
    end
  end
end 